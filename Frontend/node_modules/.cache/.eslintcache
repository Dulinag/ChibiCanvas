[{"/home/dulinag/chibicanvas/Frontend/src/index.js":"1","/home/dulinag/chibicanvas/Frontend/src/reportWebVitals.js":"2","/home/dulinag/chibicanvas/Frontend/src/Home.js":"3","/home/dulinag/chibicanvas/Frontend/src/App.js":"4","/home/dulinag/chibicanvas/Frontend/src/main.jsx":"5","/home/dulinag/chibicanvas/Frontend/src/NewLandingPage.jsx":"6","/home/dulinag/chibicanvas/Frontend/src/Contact.jsx":"7","/home/dulinag/chibicanvas/Frontend/src/Profile.jsx":"8"},{"size":321,"mtime":1692812131803,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1692806907541,"results":"11","hashOfConfig":"10"},{"size":12043,"mtime":1692903392447,"results":"12","hashOfConfig":"10"},{"size":225,"mtime":1692812609455,"results":"13","hashOfConfig":"10"},{"size":500,"mtime":1692815990086,"results":"14","hashOfConfig":"10"},{"size":2106,"mtime":1692823361705,"results":"15","hashOfConfig":"10"},{"size":3893,"mtime":1692818928504,"results":"16","hashOfConfig":"10"},{"size":7704,"mtime":1692824754888,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1tdkb47",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"21"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"21"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"21"},"/home/dulinag/chibicanvas/Frontend/src/index.js",[],[],[],"/home/dulinag/chibicanvas/Frontend/src/reportWebVitals.js",[],[],"/home/dulinag/chibicanvas/Frontend/src/Home.js",["47","48","49","50","51","52","53"],[],"import React, { useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport Collapse from '@mui/material/Collapse';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport { red } from '@mui/material/colors';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ShareIcon from '@mui/icons-material/Share';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport styled1 from 'styled-components';\nimport image1 from './images/Sanji_and_Zeff_Cooking.webp'\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\nimport { Link } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport TextField from '@mui/material/TextField';\nimport DialogActions from '@mui/material/DialogActions';\nimport {useNavigate } from 'react-router-dom';\nimport { Container, Nav, Navbar, NavDropdown } from 'react-bootstrap'; \nimport axios from 'axios';\n\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\n\n\nconst CheckoutButton = styled1.button`\n  background-color: #f0c14b;\n  border: 1px solid #a88734;\n  border-radius: 3px;\n  color: #111;\n  padding: 10px 20px;\n  cursor: pointer;\n  font-weight: bold;\n  transition: background-color 0.3s, border-color 0.3s;\n\n  &:hover {\n    background-color: #ff9900;\n    border-color: #9c7e31;\n  }\n`;\n\n\n\n\n\n\nconst Centerpage = styled1.div`\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst BigDiver = styled1.div`\n  background-color: black;\n  padding-bottom: 30%;\n  color: white;\n`;\n\n\nconst Titler = styled1.div`\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 1%;  \n  padding-bottom: 1%;  \n\n`;\n\nconst LoginSpace = styled1.div`\ntext-align: center;\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: center;\n  \n`;\n\n\nconst ExpandMore = styled((props) => {\n  const { expand, ...other } = props;\n  return <IconButton {...other} />;\n})(({ theme, expand }) => ({\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n  marginLeft: 'auto',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest,\n  }),\n}));\n\nfunction Home() {\n\n  const navigate = useNavigate();\n\n  const [expanded, setExpanded] = React.useState(false);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [email, setEmail] = useState('');\n  const [isLoginDialogOpen, setIsLoginDialogOpen] = useState(false);\n  const [isAccountDialogOpen, setIsAccountDialogOpen] = useState(false);\n  const [password, setPassword] = useState('');\n  const [isValidationError, setIsValidationError] = useState(false);\n\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n\n\n  const handleCreateAccountClick = () => {\n    setIsDialogOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setIsDialogOpen(false);\n  };\n\n\n  \n\n \n  \n  const handleLoginClick = () => {\n    setIsLoginDialogOpen(true);\n  };\n\n\n  const handleProfileClick = () => {\nif(setIsValidationError(false) && setIsLoginDialogOpen(false)){\n  navigate('/Profile');\n\n}\n\n  };\n  const handleLoginDialogClose = () => {\n    setIsLoginDialogOpen(false);\n  };\n  const loginEndpoint = '/login';\n  const createAccountEndpoint = 'http://localhost:3001/createAccount';\n  \n\n  const handleLogin = async () => {\n    if (email && password) {\n      try {\n        const response = await fetch(loginEndpoint, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ username: email, password }),\n        });\n  \n        if (response.ok) {\n          // Handle successful response, e.g., store authentication token or redirect\n          alert('Logged in successfully!');\n          setIsValidationError(false);\n          setIsLoginDialogOpen(false);\n          navigate('/Profile');\n        } else {\n          // Handle error response, e.g., show error message\n          setIsValidationError(true);\n          console.error('Login failed:', response.statusText);\n        }\n      } catch (error) {\n        // Handle network errors\n        setIsValidationError(true);\n        console.error('Login failed:', error);\n      }\n    } else {\n      setIsValidationError(true);\n    }\n  };\n  \n  const handleCreateAccount = async () => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  \n    console.log('email:', email); // Check the value of email\n    console.log('emailIsValid:', emailRegex.test(email));\n  \n    if (email && password && password.length >= 6 && emailRegex.test(email)) {\n      try {\n        const response = await fetch(createAccountEndpoint, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ username: email, password }),\n        });\n  \n        if (response.ok) {\n          // Handle successful response, e.g., show success message or redirect\n          alert('Account created successfully!');\n          setIsValidationError(false);\n          setIsDialogOpen(false);\n          navigate('/Profile');\n        } else {\n          // Handle error response, e.g., show error message\n          setIsValidationError(true);\n          console.error('Account creation failed:', response.statusText);\n        }\n      } catch (error) {\n        // Handle network errors\n        setIsValidationError(true);\n        console.error('Account creation failed:', error);\n      }\n    } else {\n      setIsValidationError(true);\n    }\n  };\n  \n  \n  console.log(email);\n  console.log(password);\n  \nconst ProfileAvatar = styled(Avatar)(({ theme }) => ({\n  width: theme.spacing(12),\n  height: theme.spacing(12),\n  marginBottom: theme.spacing(2),\n}));\n\n\n  return (\n\n\n<>\n    <div className=\"App\">\n      <BigDiver>\n\n      <Navbar expand=\"lg\" className=\"bg-body-tertiary\">\n      <Container>\n        <Navbar.Brand href=\"/\">Chibi Canvas</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"me-auto\">\n            <Nav.Link href=\"/\">Home</Nav.Link>\n            <Nav.Link href=\"/Profile\">Profile</Nav.Link>\n            <Nav.Link href=\"/Contact\">Contact</Nav.Link>\n\n            <Nav.Link href=\"/ShoppingCart\">          <ShoppingCartIcon /> </Nav.Link>\n            \n\n          \n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n\n<Titler>\n\n    <a onClick = {handleProfileClick}>\n    <ProfileAvatar src=\"/path/to/avatar.png\" alt=\"User Avatar\" />\n</a>\n\n\n  </Titler>\n\n<LoginSpace >\n\n<CheckoutButton onClick={handleLoginClick}>   \n            Log In\n</CheckoutButton>\n\n\n          <CheckoutButton onClick={handleCreateAccountClick}>\n            Create Account\n          </CheckoutButton>\n\n\n          <Dialog open={isLoginDialogOpen} onClose={handleLoginDialogClose}>\n            <DialogTitle>Log In</DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                Please enter your email and password to log in.\n              </DialogContentText>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                label=\"Email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                error={isValidationError}\n                helperText={isValidationError && 'Please enter a valid email'}\n                fullWidth\n              />\n              <TextField\n                margin=\"dense\"\n                label=\"Password\"\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                error={isValidationError && password.length === 0}\n                helperText={isValidationError && password.length === 0 && 'Please enter your password'}\n                fullWidth\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleLoginDialogClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button onClick={handleLogin} color=\"primary\">\n                Log In\n              </Button>\n            </DialogActions>\n          </Dialog>\n        \n          </LoginSpace>\n          <Dialog open={isDialogOpen} onClose={handleDialogClose}>\n            <DialogTitle>Create Account</DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                Please enter your email and password to create an account.\n              </DialogContentText>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                label=\"Email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                error={isValidationError}\n                helperText={isValidationError && 'Please enter a valid email'}\n                fullWidth\n              />\n              <TextField\n                margin=\"dense\"\n                label=\"Password\"\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                error={isValidationError && password.length < 6}\n                helperText={isValidationError && password.length < 6 && 'Password must be at least 6 characters'}\n                fullWidth\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleDialogClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button onClick={handleCreateAccount} color=\"primary\">\n                Create\n              </Button>\n            </DialogActions>\n          </Dialog>\n        \n     \n  <Card sx={{ maxWidth: 345 }}>\n      <CardHeader\n        avatar={\n          <Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">\n            R\n          </Avatar>\n        }\n        action={\n          <IconButton aria-label=\"settings\">\n            <MoreVertIcon />\n          </IconButton>\n        }\n        title=\"Sanji's Paella\"\n        subheader=\"September 14, 2016\"\n      />\n      <CardMedia\n        component=\"img\"\n        height=\"194\"\n        image={image1}\n        alt=\"Sanji's Paella\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          This impressive paella is a perfect party dish and a fun meal to cook\n          together with your guests. Add 1 cup of frozen peas along with the mussels,\n          if you like.\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton>\n        <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton>\n        <IconButton aria-label=\"Add to cart\" href=\"/ShoppingCart\">\n          <ShoppingCartIcon />\n        </IconButton>\n        \n        <ExpandMore\n          expand={expanded}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </ExpandMore>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n        <Typography paragraph>$5000</Typography>\n          <Typography paragraph>\n          </Typography>\n          <Typography paragraph>\n            Sanji/s tasy Paella\n          </Typography>\n      \n      \n        </CardContent>\n      </Collapse>\n    </Card>\n    </BigDiver>\n    </div>\n    </>\n  );\n}\n\nexport default Home;\n","/home/dulinag/chibicanvas/Frontend/src/App.js",["54"],[],"import './App.css';\nimport * as React from 'react'\n\nimport u from './'\n\nimport MainRoutes from './main';\n\n\n\n\nfunction App() {\n\n\n  return (\n\n\n\n      \n    <>\n    \n    \n    <MainRoutes />\n\n    </>\n\n  )\n\n\n}\n\nexport default App;\n\n","/home/dulinag/chibicanvas/Frontend/src/main.jsx",[],[],"/home/dulinag/chibicanvas/Frontend/src/NewLandingPage.jsx",[],[],"/home/dulinag/chibicanvas/Frontend/src/Contact.jsx",["55"],[],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { TextField, Button, Typography, Box } from \"@mui/material\";\nimport { Container, Nav, Navbar } from 'react-bootstrap'; \nimport 'bootstrap/dist/css/bootstrap.css';\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\n\n\n\nconst TrueColor = styled.div`\n  \ncolor: white;\ntext-align center;\n\npadding: 10px;\n\n`;\n\nconst ContactContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: flex-start; \n   min-height: 150vh;\n   overflow: hidden;\n   color: white;\n  background-color: black;\n`;\n\n\nexport default function Contact() {\n\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    useEffect(() => {\n        // Scroll to the top of the page when the component mounts\n        window.scrollTo(0, 0);\n      }, []);\n    \n      const handleSubmit = (e) => {\n        e.preventDefault();\n        //\n      };\n    return (\n    <>\n    \n     <div className=\"app2\">\n     <Navbar expand=\"lg\" className=\"bg-body-tertiary\">\n      <Container>\n        <Navbar.Brand href=\"/\">Chibi Canvas</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"me-auto\">\n            <Nav.Link href=\"/\">Home</Nav.Link>\n            <Nav.Link href=\"/Profile\">Profile</Nav.Link>\n            <Nav.Link href=\"/Contact\">Contact</Nav.Link>\n\n            <Nav.Link href=\"/ShoppingCart\">          <ShoppingCartIcon /> </Nav.Link>\n\n          \n          \n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n\n\n<ContactContainer>\n   \n<Box\n      sx={{\n        height: '150vh',\n        color: 'white',\n        maxWidth: '1000px', // Increase the max width of the component\n        margin: '0 auto', \n        \n      }}\n    >\n      <Box sx={{ maxWidth: 900, mx: 'auto', p: 2 }}>\n        <Typography variant=\"h4\" align=\"center\" mb={2}>\n          Contact Us\n        </Typography>\n        <form onSubmit={handleSubmit}>\n          <TextField\n            fullWidth\n            label=\"Name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            margin=\"normal\"\n            required\n            InputProps={{\n              style: {\n                color: 'white', // Set the font color to white\n              },\n            }}\n            InputLabelProps={{\n              style: {\n                color: 'white', // Set the label color to white\n              },\n            }}\n          />\n          <TextField\n            fullWidth\n            label=\"Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            margin=\"normal\"\n            required\n            type=\"email\"\n            InputProps={{\n              style: {\n                color: 'white', // Set the font color to white\n              },\n            }}\n            InputLabelProps={{\n              style: {\n                color: 'white', // Set the label color to white\n              },\n            }}\n          />\n          <TextField\n            fullWidth\n            label=\"Message\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            margin=\"normal\"\n            required\n            multiline\n            rows={4}\n            InputProps={{\n              style: {\n                color: 'white', // Set the font color to white\n              },\n            }}\n            InputLabelProps={{\n              style: {\n                color: 'white', // Set the label color to white\n              },\n            }}\n          />\n          <Button variant=\"contained\" type=\"submit\" sx={{ mt: 2 }}>\n            Submit\n          </Button>\n        </form>\n      </Box>\n    </Box>\n      </ContactContainer>\n      \n\n      </div>\n    </>\n  );\n}\n  \n","/home/dulinag/chibicanvas/Frontend/src/Profile.jsx",["56","57","58","59"],[],"import React, { useState } from 'react';\nimport {Paper, Avatar } from '@mui/material';\nimport { Card, CardActions, CardContent, Button, Typography } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { Container, Nav, Navbar, NavDropdown } from 'react-bootstrap'; \nimport 'bootstrap/dist/css/bootstrap.css';\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\nimport styled1 from 'styled-components';\nimport AddIcon from '@mui/icons-material/Add'; // Import the AddIcon component\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ShareIcon from '@mui/icons-material/Share';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport SaveIcon from '@mui/icons-material/Save'; // Import the SaveIcon component\nimport { red } from '@mui/material/colors';\nimport {\n\n    CardHeader,\n    CardMedia,\n    IconButton,\n    TextField,\n  } from '@mui/material';\nimport image2 from './images/Sanji_and_Zeff_Cooking.webp'\n\nconst BigDiver = styled1.div`\n  background-color: black;\n  padding-bottom: 20%;\n  padding-top: 5%;\n  color: white;\n`;\n\nconst Spacer = styled1.div`\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n`;\n\nconst Padder = styled1.div`\n color: black;\n padding-bottom: 25%;\n`;\n\nconst Spacer1 = styled1.div`\ndisplay: flex;\ntext-align: center;\nflex-direction: row;\njustify-content: space-evenly;\npadding-top: 10px;\nflex-wrap: wrap;\noverflow-y: scroll;\nborder: 1px solid black;\nheight: 600px;\n`;\n\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  padding: theme.spacing(4),\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n}));\n\nconst ProfileAvatar = styled(Avatar)(({ theme }) => ({\n  width: theme.spacing(12),\n  height: theme.spacing(12),\n  marginBottom: theme.spacing(2),\n}));\n\nfunction Profile() {\n\n    const [cards, setCards] = useState([]);\n    const [editingIndex, setEditingIndex] = useState(null);\n    const [editedTitle, setEditedTitle] = useState('');\n    const [editedSubheader, setEditedSubheader] = useState('');\n    const [editedContent, setEditedContent] = useState('');\n    const [editedImage, setEditedImage] = useState('');\n    const [editedPrice, setEditedPrice] = useState('');\n\n  \n    const handleToggleEdit = (index) => {\n      if (editingIndex === index) {\n        handleSaveCard(index);\n      } else {\n        setEditingIndex(index);\n        setEditedTitle(cards[index].title);\n        setEditedSubheader(cards[index].subheader);\n        setEditedContent(cards[index].content);\n        setEditedPrice(cards[index].price);\n      }\n    };\n  \n    const handleSaveCard = (index) => {\n        const updatedCards = [...cards];\n        updatedCards[index].title = editedTitle;\n        updatedCards[index].subheader = editedSubheader;\n        updatedCards[index].price = editedPrice;\n\n        updatedCards[index].content = editedContent;\n        updatedCards[index].image = editedImage; // Update the image URL\n      \n        setCards(updatedCards);\n        setEditingIndex(null);\n      };\n      \n\n    const handleAddCard = () => {\n        const newCard = {\n          title: \"Title\",\n          subheader: 'Date Made',\n          image: 'https://example.com/placeholder-image.jpg', // Use a placeholder image URL here,\n          price: '$--',\n          content: 'This impressive paella is a perfect party dish and a fun meal to cook together with your guests...',\n        };\n      \n        setCards([...cards, newCard]);\n      };\n\n  const handleEditCard = (index) => {\n    setEditingIndex(index);\n  };\n\n \n  return (\n    <>    <Navbar expand=\"lg\" className=\"bg-body-tertiary\">\n    <Container>\n      <Navbar.Brand href=\"/\">Chibi Canvas</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"me-auto\">\n          <Nav.Link href=\"/\">Home</Nav.Link>\n          <Nav.Link href=\"/Profile\">Profile</Nav.Link>\n          <Nav.Link href=\"/Contact\">Contact</Nav.Link>\n\n          <Nav.Link href=\"/ShoppingCart\">          <ShoppingCartIcon /> </Nav.Link>\n\n        \n        </Nav>\n      </Navbar.Collapse>\n    </Container>\n  </Navbar>\n  <BigDiver>\n    <Container maxWidth=\"sm\">\n      <StyledPaper elevation={3}>\n        <ProfileAvatar src=\"/path/to/avatar.png\" alt=\"User Avatar\" />\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Welcome to Your Profile\n        </Typography>\n        <Typography variant=\"body1\">\nHello        </Typography>\n        {/* Display more user information or relevant content */}\n      </StyledPaper>\n      <Spacer>\n        \n        <br></br>\n<Card>\n        <CardContent>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            href=\"#scrollToSection\"\n\n            startIcon={<AddIcon />}\n            onClick={handleAddCard}\n          >\n            Add Art\n          </Button>\n        </CardContent>\n      </Card>\n      </Spacer>\n    </Container>\n<Padder>h</Padder>\n    <Spacer1 id=\"scrollToSection\">\n    {cards.map((card, index) => (\n  <Card key={index} sx={{ maxWidth: 345 }}>\n    <CardHeader\n      avatar={\n        <Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">\n          R\n        </Avatar>\n      }\n      action={\n        <IconButton aria-label=\"settings\">\n          <MoreVertIcon />\n        </IconButton>\n      }\n      title={\n        editingIndex === index ? (\n          <TextField\n            value={editedTitle}\n            onChange={(e) => setEditedTitle(e.target.value)}\n          />\n        ) : (\n          card.title\n        )\n      }\n \n      subheader={\n        editingIndex === index ? (\n          <TextField\n            value={editedSubheader}\n            onChange={(e) => setEditedSubheader(e.target.value)}\n          />\n        ) : (\n          card.subheader\n        )\n      }\n    />\n    <CardMedia\n      component=\"img\"\n      height=\"194\"\n      image={editingIndex === index ? editedImage : card.image}\n      alt={card.title}\n    />\n    {editingIndex === index && (\n      <input\n        type=\"text\"\n        placeholder=\"Enter Image URL\"\n        value={editedImage}\n        onChange={(e) => setEditedImage(e.target.value)}\n      />\n    )}\n    <CardContent>\n    <Typography variant=\"body2\" color=\"text.secondary\">\n        {editingIndex === index ? (\n          <TextField\n            multiline\n            value={editedPrice}\n            onChange={(e) => setEditedPrice(e.target.value)}\n          />\n        ) : (\n          card.price\n        )}\n      </Typography>\n      <Typography variant=\"body2\" color=\"text.secondary\">\n        {editingIndex === index ? (\n          <TextField\n            multiline\n            value={editedContent}\n            onChange={(e) => setEditedContent(e.target.value)}\n          />\n        ) : (\n          card.content\n        )}\n      </Typography>\n    </CardContent>\n    <CardActions disableSpacing>\n      <IconButton aria-label=\"add to favorites\">\n        <FavoriteIcon />\n      </IconButton>\n      <IconButton aria-label=\"share\">\n        <ShareIcon />\n      </IconButton>\n      <IconButton aria-label=\"Add to cart\" href=\"/ShoppingCart\">\n        {/* Add your cart icon */}\n      </IconButton>\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => handleToggleEdit(index)}\n      >\n        {editingIndex === index ? 'Save' : 'Edit'}\n      </Button>\n      {editingIndex === index && (\n        <IconButton aria-label=\"show more\" onClick={() => handleSaveCard(index)}>\n          <SaveIcon />\n        </IconButton>\n      )}\n    </CardActions>\n  </Card>\n))}\n\n\n\n\n\n</Spacer1>\n\n\n\n    </BigDiver>\n    \n    </>\n  );\n}\n\nexport default Profile;\n",{"ruleId":"60","severity":1,"message":"61","line":20,"column":10,"nodeType":"62","messageId":"63","endLine":20,"endColumn":14},{"ruleId":"60","severity":1,"message":"64","line":29,"column":34,"nodeType":"62","messageId":"63","endLine":29,"endColumn":45},{"ruleId":"60","severity":1,"message":"65","line":30,"column":8,"nodeType":"62","messageId":"63","endLine":30,"endColumn":13},{"ruleId":"60","severity":1,"message":"66","line":59,"column":7,"nodeType":"62","messageId":"63","endLine":59,"endColumn":17},{"ruleId":"60","severity":1,"message":"67","line":112,"column":10,"nodeType":"62","messageId":"63","endLine":112,"endColumn":29},{"ruleId":"60","severity":1,"message":"68","line":112,"column":31,"nodeType":"62","messageId":"63","endLine":112,"endColumn":53},{"ruleId":"69","severity":1,"message":"70","line":263,"column":5,"nodeType":"71","endLine":263,"endColumn":39},{"ruleId":"60","severity":1,"message":"72","line":4,"column":8,"nodeType":"62","messageId":"63","endLine":4,"endColumn":9},{"ruleId":"60","severity":1,"message":"73","line":10,"column":7,"nodeType":"62","messageId":"63","endLine":10,"endColumn":16},{"ruleId":"60","severity":1,"message":"64","line":5,"column":34,"nodeType":"62","messageId":"63","endLine":5,"endColumn":45},{"ruleId":"60","severity":1,"message":"74","line":13,"column":8,"nodeType":"62","messageId":"63","endLine":13,"endColumn":22},{"ruleId":"60","severity":1,"message":"75","line":23,"column":8,"nodeType":"62","messageId":"63","endLine":23,"endColumn":14},{"ruleId":"60","severity":1,"message":"76","line":120,"column":9,"nodeType":"62","messageId":"63","endLine":120,"endColumn":23},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'NavDropdown' is defined but never used.","'axios' is defined but never used.","'Centerpage' is assigned a value but never used.","'isAccountDialogOpen' is assigned a value but never used.","'setIsAccountDialogOpen' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'u' is defined but never used.","'TrueColor' is assigned a value but never used.","'ExpandMoreIcon' is defined but never used.","'image2' is defined but never used.","'handleEditCard' is assigned a value but never used."]